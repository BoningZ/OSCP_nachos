Lab7 虚拟内存
2022.7.15

本目录下的可执行程序n7为Lab7的一个参考实现。
用户进程的帧数采用固定分配(帧数可在命令行设置)，局部置换。
实现了6种页置换算法(算法可在命令行设置)。
实现了“纯按需调页”(pure demand paging)。
虚拟内存交换文件为SWAPn(n值为用户程序的SpaceId号)。

n7在原Nachos的命令行选项外，增加了下面2个命令行选项：
[-mf m] [-pra -a]

其中-mf选项用来设定一个用户程序分配的最大帧数为m，默认值为5。

-pra选项用来选择页置换算法：
-pra 0  最优页置换(需要相应的二进制引用串文件才能执行)
-pra 1  FIFO页置换
-pra 2  二次机会(时钟)页置换
-pra 3  增强型二次机会页置换
-pra 4  LRU(栈)页置换，默认算法
-pra 5  a值为>=5的整数时，为随机页置换(仅用于比较前述算法的优劣)，这时a值也作为伪随机数的种子

若将-pra后面的参数a设为负值(a为0除外)，则n7会在运行过程中，为后续执行的最优页置换算法记录二进制引用串文件REFSTRn(n值为用户程序的SpaceId号)。


例如(需要先完成../test/sort.c的编译)：
./n7 -x ../test/sort.noff    # 以默认参数(5个帧，LRU算法)运行用户程序sort
./n7 -mf 4 -pra 1 -x ../test/sort.noff    # 参数为4个帧，FIFO算法，运行用户程序sort

./n7 -pra -4 -x ../test/sort.noff    # 参数为默认5个帧，LRU算法，运行用户程序sort，并为后续执行的最优页置换算法记录二进制引用串文件REFSTR0
./n7 -pra 0 -x ../test/sort.noff    # 参数为默认5个帧，最优置换算法(用前面记录的二进制引用串文件REFSTR0来窥探未来)，运行用户程序sort
